//12-a
import java.util.Arrays;
import java.util.List;

public class GenericPrograms {

    public static <T extends Number> int countOddIntegers(List<T> numbers) {
        int count = 0;
        for (T num : numbers) {
            if (num.intValue() % 2 != 0) {
                count++;
            }
        }
        return count;
    }

    public static <T> void exchangeElements(T[] array, int index1, int index2) {
        if (index1 >= 0 && index1 < array.length && index2 >= 0 && index2 < array.length) {
            T temp = array[index1];
            array[index1] = array[index2];
            array[index2] = temp;
        }
    }

    public static <T extends Comparable<T>> T findMaxElementInRange(List<T> list, int begin, int end) {
        if (begin >= 0 && end < list.size() && begin <= end) {
            T maxElement = list.get(begin);
            for (int i = begin + 1; i <= end; i++) {
                T currentElement = list.get(i);
                if (currentElement.compareTo(maxElement) > 0) {
                    maxElement = currentElement;
                }
            }
            return maxElement;
        } else {
            throw new IllegalArgumentException("Invalid range");
        }
    }

    public static void main(String[] args) {
        // Example usage:
        List<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);
        System.out.println("Number of odd integers: " + countOddIntegers(integerList));

        Integer[] intArray = {1, 2, 3, 4, 5};
        exchangeElements(intArray, 1, 3);
        System.out.println("Exchanged elements: " + Arrays.toString(intArray));

        List<Double> doubleList = Arrays.asList(2.5, 1.8, 3.2, 4.7, 2.1);
        Double maxInRange = findMaxElementInRange(doubleList, 1, 3);
        System.out.println("Maximal element in the range: " + maxInRange);
    }
}